<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--数据库属性值（如driver、URL、username、password等）的存储位置-->
    <properties resource="db.properties"></properties>
    
    <settings>
        <!--全局配置，当SQL输入参数为null时，不转换成OTHER，而是直接转换成NULL传递给数据库-->
        <setting name="jdbcTypeForNull" value="NULL"/>
        <!--开启日志，并制定使用的具体日志类型-->
        <setting name="logImpl" value="LOG4J"/>
        <!--开启延迟加载-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--关闭立即加载-->
        <setting name="aggressiveLazyLoading" value="false"/>
        <!--开启二级缓存-->
        <setting name="cacheEnabled" value="true"/>
    </settings>

    <!--将entity包下的所有类的类名定义为简写类名（不加包路径），使用时不区分大小写。-->
    <typeAliases>
        <package name="entity"/>
    </typeAliases>

    <typeHandlers>
        <typeHandler handler="converter.BooleanAndIntConverter" javaType="Boolean" jdbcType="INTEGER"></typeHandler>
    </typeHandlers>

    <!--通过environments的default值和environment的id值来指定MyBatis运行时的数据库环境-->
    <!--默认设置可以通过在SqlSessionFactoryBuilder().build(reader)中更改，只需将目标id值添加在build参数列表中-->
    <environments default="development">
        <!--environment配置开发数据库环境-->
        <environment id="development">
            <!--事务提交方式：
                JDBC：利用JDBC方式处理事务（commit，rollback，close）
                MANAGED：将事务交由其他组件托管（Spring，Jobss），默认用完即关闭
            -->
            <transactionManager type="JDBC"/>
            <!--数据源类型：
                UNPOLLED：传统的JDBC模式（每次访问数据库均需要打开、关闭等数据库操作，比较消耗性能，不推荐）
                POLLED：使用数据库连接池（自带的，推荐）
                JNDI：从Tomcat中获取一个内置的数据库连接池（第三方）
            -->
            <dataSource type="POOLED">
                <!--配置数据库信息（默认MySQL）-->
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--配置数据库支持类-->
    <databaseIdProvider type="DB_VENDOR">
        <!--property需根据元数据查询数据库名（不能随意写），value值为别名-->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
    </databaseIdProvider>
    
    <mappers>
        <!--批量加载映射文件
        <package name="mapper"/>
        -->
        <mapper resource="mapper/studentMapper.xml"></mapper>
        <mapper resource="mapper/studentCardMapper.xml"></mapper>
        <mapper resource="mapper/studentClassMapper.xml"></mapper>
        <!--注解形式的加载映射文件方式
        <mapper class="mapper.StudentMapper"></mapper>
        -->
    </mappers>
</configuration>